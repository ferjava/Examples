CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

PROJECT(Alleg_Tuto)

SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_REQUIRED ON)
#Directirio de Allegro
SET(ALLEG_LIB_DIR ${CMAKE_SOURCE_DIR}/lib_x86_64/lib)


#Librerias para el proyecto
IF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Linux")
    SET(ALLEGRO_LIBRARY ${ALLEG_LIB_DIR}/liballegro.so )
    SET(ALLEGRO_FONT_LIBRARY ${ALLEG_LIB_DIR}/liballegro_font.so)
ELSEIF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Windows")
    SET(ALLEGRO_LIBRARY ${ALLEG_LIB_DIR}/allegro-5.2.dll )
    SET(ALLEGRO_FONT_LIBRARY ${ALLEG_LIB_DIR}/allegro_font-5.2.dll)
ELSE()
    MESSAGE(FATAL_ERROR "Unsupported platform: ${CMAKE_HOST_SYSTEM_NAME}")
ENDIF()




INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib_x86_64/include)

ADD_EXECUTABLE(${PROJECT_NAME} main.cpp)

SET(ASSETS_SOURCE_DIR "${CMAKE_SOURCE_DIR}/assets")
SET(ASSETS_DEST_DIR "${CMAKE_BINARY_DIR}/assets")
ADD_CUSTOM_COMMAND(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${ASSETS_SOURCE_DIR} ${ASSETS_DEST_DIR}
)
IF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Windows")
    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${ALLEG_LIB_DIR}/allegro-5.2.dll"
        $<TARGET_FILE_DIR:${PROJECT_NAME}>
    )

    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${ALLEG_LIB_DIR}/allegro_font-5.2.dll"
        $<TARGET_FILE_DIR:${PROJECT_NAME}>
    )
    MESSAGE(${ALLEGRO_LIBRARY} ${ALLEGRO_FONT_LIBRARY})
ENDIF()


TARGET_LINK_LIBRARIES(
    ${PROJECT_NAME} 
    ${ALLEGRO_LIBRARY} ${ALLEGRO_FONT_LIBRARY}
    )

